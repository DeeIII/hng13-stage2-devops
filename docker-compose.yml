version: '3.8'

services:
  # Blue application instance
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=${PORT:-8080}
    ports:
      - "${BLUE_PORT:-8081}:8080"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - app_network
    restart: unless-stopped

  # Green application instance
  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=${PORT:-8080}
    ports:
      - "${GREEN_PORT:-8082}:8080"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - app_network
    restart: unless-stopped

  # Nginx reverse proxy with Blue/Green routing
  nginx:
    image: nginx:alpine
    container_name: nginx
    environment:
      - ACTIVE_POOL=${ACTIVE_POOL}
    ports:
      - "${NGINX_PORT:-8080}:80"
    volumes:
      - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./entrypoint.sh:/docker-entrypoint.sh:ro
    command: ["/docker-entrypoint.sh"]
    depends_on:
      app_blue:
        condition: service_healthy
      app_green:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3

networks:
  app_network:
    driver: bridge
